Interface: 
BasicCalculatorInterface which has these below methods 
 int sum(int x, int y) 
 int sub(int x, int y) 
 int multiplication(int x, int y) 
 int division(int x, int y) 
ScientificCalculatorInterface 
 int XtoY(int x, int y) 
 Other scientific methods that you find best fit for you 
Develop necessary class to implement these two interfaces and test from main 
method.

using System;

// Define the BasicCalculatorInterface interface
public interface BasicCalculatorInterface
{
    int Sum(int x, int y);
    int Sub(int x, int y);
    int Multiplication(int x, int y);
    int Division(int x, int y);
}

// Define the ScientificCalculatorInterface interface
public interface ScientificCalculatorInterface
{
    int XtoY(int x, int y);
    // Add other scientific methods here
    // For example, you could add methods for exponentiation, square root, etc.
}

// Implement the BasicCalculatorInterface in BasicCalculator class
public class BasicCalculator : BasicCalculatorInterface
{
    public int Sum(int x, int y)
    {
        return x + y;
    }

    public int Sub(int x, int y)
    {
        return x - y;
    }

    public int Multiplication(int x, int y)
    {
        return x * y;
    }

    public int Division(int x, int y)
    {
        if (y == 0)
        {
            throw new DivideByZeroException("Cannot divide by zero.");
        }
        return x / y;
    }
}

// Implement the ScientificCalculatorInterface in ScientificCalculator class
public class ScientificCalculator : ScientificCalculatorInterface
{
    public int XtoY(int x, int y)
    {
        return (int)Math.Pow(x, y);
    }

    // Implement other scientific methods here
    // For example, you could implement methods for square root, trigonometric functions, etc.
}

class Program
{
    static void Main()
    {
        // Test the BasicCalculator
        BasicCalculator basicCalculator = new BasicCalculator();
        int x = 10;
        int y = 5;
        Console.WriteLine($"Sum: {basicCalculator.Sum(x, y)}");
        Console.WriteLine($"Subtraction: {basicCalculator.Sub(x, y)}");
        Console.WriteLine($"Multiplication: {basicCalculator.Multiplication(x, y)}");

        try
        {
            int divisionResult = basicCalculator.Division(x, 0);
            Console.WriteLine($"Division: {divisionResult}");
        }
        catch (DivideByZeroException ex)
        {
            Console.WriteLine(ex.Message);
        }

        // Test the ScientificCalculator
        ScientificCalculator scientificCalculator = new ScientificCalculator();
        Console.WriteLine($"10^5: {scientificCalculator.XtoY(10, 5)}");
        // Test other scientific methods if implemented
    }
}

